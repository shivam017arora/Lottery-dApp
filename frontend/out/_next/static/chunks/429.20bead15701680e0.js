"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[429],{94429:function(e,b,a){a.r(b),a.d(b,{MetamaskAdapter:function(){return h}});var f=a(4942),c=a(92003),g=a.n(c),d=a(41436);class h extends d.J5{constructor(){let a=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{};super(),(0,f.Z)(this,"adapterNamespace",d.yk.EIP155),(0,f.Z)(this,"currentChainNamespace",d.EN.EIP155),(0,f.Z)(this,"type",d.hN.EXTERNAL),(0,f.Z)(this,"name",d.rW.METAMASK),(0,f.Z)(this,"status",d.MP.NOT_READY),(0,f.Z)(this,"rehydrated",!1),(0,f.Z)(this,"metamaskProvider",null),this.chainConfig=a.chainConfig||null}get provider(){return this.status===d.MP.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(a){throw new Error("Not implemented")}async init(a){if(super.checkInitializationRequirements(),this.metamaskProvider=await g()({mustBeMetaMask:!0}),!this.metamaskProvider)throw d.Ty.notInstalled("Metamask extension is not installed");this.status=d.MP.READY,this.emit(d.n2.READY,d.rW.METAMASK);try{a.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(b){this.emit(d.n2.ERRORED,b)}}setAdapterSettings(a){}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=(0,d.h2)(d.EN.EIP155,1)),this.status=d.MP.CONNECTING,this.emit(d.n2.CONNECTING,{adapter:d.rW.METAMASK}),!this.metamaskProvider)throw d.RM.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:a}=this.metamaskProvider;if(a!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=d.MP.CONNECTED,!this.provider)throw d.RM.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",()=>{this.disconnect()}),this.emit(d.n2.CONNECTED,{adapter:d.rW.METAMASK,reconnected:this.rehydrated}),this.provider}catch(b){throw this.status=d.MP.READY,this.rehydrated=!1,this.emit(d.n2.ERRORED,b),d.RM.connectionError("Failed to login with metamask wallet")}}async disconnect(){var a;let b=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==d.MP.CONNECTED)throw d.RM.disconnectionError("Not connected with wallet");null===(a=this.provider)|| void 0===a||a.removeAllListeners(),b.cleanup?(this.status=d.MP.NOT_READY,this.metamaskProvider=null):this.status=d.MP.READY,this.rehydrated=!1,this.emit(d.n2.DISCONNECTED)}async getUserInfo(){if(this.status!==d.MP.CONNECTED)throw d.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(a){if(!this.metamaskProvider)throw d.RM.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:a.chainId}]})}catch(b){if(4902===b.code)await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:a.chainId,chainName:a.displayName,rpcUrls:[a.rpcTarget]}]});else throw b}}}}}])